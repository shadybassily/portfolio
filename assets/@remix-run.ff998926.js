/**
 * @remix-run/router v1.0.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function g(){return g=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},g.apply(this,arguments)}var d;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(d||(d={}));const H="popstate";function M(e){e===void 0&&(e={});function t(a,r){let{pathname:u,search:i,hash:o}=a.location;return E("",{pathname:u,search:i,hash:o},r.state&&r.state.usr||null,r.state&&r.state.key||"default")}function n(a,r){return typeof r=="string"?r:x(r)}return T(t,n,null,e)}function W(){return Math.random().toString(36).substr(2,8)}function L(e){return{usr:e.state,key:e.key}}function E(e,t,n,a){return n===void 0&&(n=null),g({pathname:typeof e=="string"?e:e.pathname,search:"",hash:""},typeof t=="string"?C(t):t,{state:n,key:t&&t.key||a||W()})}function x(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&n!=="?"&&(t+=n.charAt(0)==="?"?n:"?"+n),a&&a!=="#"&&(t+=a.charAt(0)==="#"?a:"#"+a),t}function C(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function j(e){let t=typeof window<"u"&&typeof window.location<"u"&&window.location.origin!=="null"?window.location.origin:"unknown://unknown",n=typeof e=="string"?e:x(e);return new URL(n,t)}function T(e,t,n,a){a===void 0&&(a={});let{window:r=document.defaultView,v5Compat:u=!1}=a,i=r.history,o=d.Pop,l=null;function w(){o=d.Pop,l&&l({action:o,location:c.location})}function m(s,h){o=d.Push;let f=E(c.location,s,h);n&&n(f,s);let P=L(f),y=c.createHref(f);try{i.pushState(P,"",y)}catch{r.location.assign(y)}u&&l&&l({action:o,location:c.location})}function p(s,h){o=d.Replace;let f=E(c.location,s,h);n&&n(f,s);let P=L(f),y=c.createHref(f);i.replaceState(P,"",y),u&&l&&l({action:o,location:c.location})}let c={get action(){return o},get location(){return e(r,i)},listen(s){if(l)throw new Error("A history only accepts one active listener");return r.addEventListener(H,w),l=s,()=>{r.removeEventListener(H,w),l=null}},createHref(s){return t(r,s)},encodeLocation(s){let h=j(x(s));return g({},s,{pathname:h.pathname,search:h.search,hash:h.hash})},push:m,replace:p,go(s){return i.go(s)}};return c}var O;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(O||(O={}));function z(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&a!=="/"?null:e.slice(n)||"/"}function v(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}function k(e,t){t===void 0&&(t="/");let{pathname:n,search:a="",hash:r=""}=typeof e=="string"?C(e):e;return{pathname:n?n.startsWith("/")?n:A(n,t):t,search:b(a),hash:B(r)}}function A(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach(r=>{r===".."?n.length>1&&n.pop():r!=="."&&n.push(r)}),n.length>1?n.join("/"):"/"}function S(e,t,n,a){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+t+"` field ["+JSON.stringify(a)+"].  Please separate it out to the ")+("`to."+n+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function D(e){return e.filter((t,n)=>n===0||t.route.path&&t.route.path.length>0)}function G(e,t,n,a){a===void 0&&(a=!1);let r;typeof e=="string"?r=C(e):(r=g({},e),v(!r.pathname||!r.pathname.includes("?"),S("?","pathname","search",r)),v(!r.pathname||!r.pathname.includes("#"),S("#","pathname","hash",r)),v(!r.search||!r.search.includes("#"),S("#","search","hash",r)));let u=e===""||r.pathname==="",i=u?"/":r.pathname,o;if(a||i==null)o=n;else{let p=t.length-1;if(i.startsWith("..")){let c=i.split("/");for(;c[0]==="..";)c.shift(),p-=1;r.pathname=c.join("/")}o=p>=0?t[p]:"/"}let l=k(r,o),w=i&&i!=="/"&&i.endsWith("/"),m=(u||i===".")&&n.endsWith("/");return!l.pathname.endsWith("/")&&(w||m)&&(l.pathname+="/"),l}const J=e=>e.join("/").replace(/\/\/+/g,"/"),b=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,B=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e,I=new Set(["POST","PUT","PATCH","DELETE"]);[...I];export{d as A,x as a,M as c,D as g,v as i,J as j,C as p,G as r,z as s};
